Escaped mutants:
================

1) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Client/PullRequest/Query.php:30    [M] DecrementInteger

--- Original
+++ New
@@ @@
     {
         Assert::stringNotEmpty($value);
         // @see https://docs.github.com/en/free-pro-team@latest/github/searching-for-information-on-github/troubleshooting-search-queries#limitations-on-query-length
-        Assert::maxLength($value, 256);
+        Assert::maxLength($value, 255);
         $this->value = $value;
     }
     public function __toString() : string


2) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Head.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private Sha $sha;
     private function __construct(string $ref, Sha $sha)
     {
-        Assert::stringNotEmpty($ref);
+        
         $this->ref = $ref;
         $this->sha = $sha;
     }


3) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Head.php:44    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public static function fromResponse(array $config) : self
     {
-        Assert::notEmpty($config);
+        
         Assert::keyExists($config, 'ref');
         Assert::stringNotEmpty($config['ref']);
         Assert::keyExists($config, 'sha');


4) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Head.php:47    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         Assert::notEmpty($config);
         Assert::keyExists($config, 'ref');
-        Assert::stringNotEmpty($config['ref']);
+        
         Assert::keyExists($config, 'sha');
         Assert::stringNotEmpty($config['sha']);
         return new self($config['ref'], Sha::fromString($config['sha']));


5) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Head.php:50    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::keyExists($config, 'ref');
         Assert::stringNotEmpty($config['ref']);
         Assert::keyExists($config, 'sha');
-        Assert::stringNotEmpty($config['sha']);
+        
         return new self($config['ref'], Sha::fromString($config['sha']));
     }
     public function ref() : string


6) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Issue.php:28    [M] IncrementInteger

--- Original
+++ New
@@ @@
     private int $value;
     private function __construct(int $value)
     {
-        Assert::greaterThan($value, 0);
+        Assert::greaterThan($value, 1);
         $this->value = $value;
     }
     public function __toString() : string


7) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Label.php:28    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private string $name;
     private function __construct(string $name)
     {
-        Assert::stringNotEmpty($name);
+        
         $this->name = $name;
     }
     public function __toString() : string


8) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Label.php:40    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public static function fromString(string $name) : self
     {
-        Assert::notEmpty($name);
+        
         return new self($name);
     }
     /**


9) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Label.php:52    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public static function fromResponse(array $response) : self
     {
-        Assert::notEmpty($response);
+        
         Assert::keyExists($response, 'name');
         return new self($response['name']);
     }


10) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Label.php:54    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public static function fromResponse(array $response) : self
     {
         Assert::notEmpty($response);
-        Assert::keyExists($response, 'name');
+        
         return new self($response['name']);
     }
     public function equals(self $other) : bool


11) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:52    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     private function __construct(Issue $issue, string $title, string $updatedAt, Head $head, ?bool $mergeable, string $mergeableState, string $htmlUrl, array $labels)
     {
-        Assert::stringNotEmpty($title);
+        
         Assert::stringNotEmpty($updatedAt);
         Assert::stringNotEmpty($mergeableState);
         Assert::stringNotEmpty($htmlUrl);


12) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:54    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private function __construct(Issue $issue, string $title, string $updatedAt, Head $head, ?bool $mergeable, string $mergeableState, string $htmlUrl, array $labels)
     {
         Assert::stringNotEmpty($title);
-        Assert::stringNotEmpty($updatedAt);
+        
         Assert::stringNotEmpty($mergeableState);
         Assert::stringNotEmpty($htmlUrl);
         $this->issue = $issue;


13) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:56    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         Assert::stringNotEmpty($title);
         Assert::stringNotEmpty($updatedAt);
-        Assert::stringNotEmpty($mergeableState);
+        
         Assert::stringNotEmpty($htmlUrl);
         $this->issue = $issue;
         $this->title = $title;


14) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:58    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::stringNotEmpty($title);
         Assert::stringNotEmpty($updatedAt);
         Assert::stringNotEmpty($mergeableState);
-        Assert::stringNotEmpty($htmlUrl);
+        
         $this->issue = $issue;
         $this->title = $title;
         $this->updatedAt = new DateTimeImmutable($updatedAt, new DateTimeZone('UTC'));


15) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:84    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
      */
     public static function fromResponse(array $response) : self
     {
-        Assert::notEmpty($response);
+        
         Assert::keyExists($response, 'number');
         Assert::keyExists($response, 'title');
         Assert::stringNotEmpty($response['title']);


16) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:89    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::notEmpty($response);
         Assert::keyExists($response, 'number');
         Assert::keyExists($response, 'title');
-        Assert::stringNotEmpty($response['title']);
+        
         Assert::keyExists($response, 'updated_at');
         Assert::stringNotEmpty($response['updated_at']);
         Assert::keyExists($response, 'merged_at');


17) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:92    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::keyExists($response, 'title');
         Assert::stringNotEmpty($response['title']);
         Assert::keyExists($response, 'updated_at');
-        Assert::stringNotEmpty($response['updated_at']);
+        
         Assert::keyExists($response, 'merged_at');
         Assert::nullOrStringNotEmpty($response['merged_at']);
         Assert::keyExists($response, 'base');


18) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:97    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::stringNotEmpty($response['updated_at']);
         Assert::keyExists($response, 'merged_at');
         Assert::nullOrStringNotEmpty($response['merged_at']);
-        Assert::keyExists($response, 'base');
+        
         Assert::notEmpty($response['base']);
         Assert::keyExists($response, 'head');
         Assert::notEmpty($response['head']);


19) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:98    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::keyExists($response, 'merged_at');
         Assert::nullOrStringNotEmpty($response['merged_at']);
         Assert::keyExists($response, 'base');
-        Assert::notEmpty($response['base']);
+        
         Assert::keyExists($response, 'head');
         Assert::notEmpty($response['head']);
         Assert::keyExists($response, 'mergeable');


20) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:100    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::nullOrStringNotEmpty($response['merged_at']);
         Assert::keyExists($response, 'base');
         Assert::notEmpty($response['base']);
-        Assert::keyExists($response, 'head');
+        
         Assert::notEmpty($response['head']);
         Assert::keyExists($response, 'mergeable');
         Assert::nullOrBoolean($response['mergeable']);


21) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:101    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::keyExists($response, 'base');
         Assert::notEmpty($response['base']);
         Assert::keyExists($response, 'head');
-        Assert::notEmpty($response['head']);
+        
         Assert::keyExists($response, 'mergeable');
         Assert::nullOrBoolean($response['mergeable']);
         Assert::keyExists($response, 'mergeable_state');


22) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:103    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::notEmpty($response['base']);
         Assert::keyExists($response, 'head');
         Assert::notEmpty($response['head']);
-        Assert::keyExists($response, 'mergeable');
+        
         Assert::nullOrBoolean($response['mergeable']);
         Assert::keyExists($response, 'mergeable_state');
         Assert::stringNotEmpty($response['mergeable_state']);


23) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:104    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::keyExists($response, 'head');
         Assert::notEmpty($response['head']);
         Assert::keyExists($response, 'mergeable');
-        Assert::nullOrBoolean($response['mergeable']);
+        
         Assert::keyExists($response, 'mergeable_state');
         Assert::stringNotEmpty($response['mergeable_state']);
         Assert::keyExists($response, 'html_url');


24) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:106    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::notEmpty($response['head']);
         Assert::keyExists($response, 'mergeable');
         Assert::nullOrBoolean($response['mergeable']);
-        Assert::keyExists($response, 'mergeable_state');
+        
         Assert::stringNotEmpty($response['mergeable_state']);
         Assert::keyExists($response, 'html_url');
         Assert::stringNotEmpty($response['html_url']);


25) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:107    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::keyExists($response, 'mergeable');
         Assert::nullOrBoolean($response['mergeable']);
         Assert::keyExists($response, 'mergeable_state');
-        Assert::stringNotEmpty($response['mergeable_state']);
+        
         Assert::keyExists($response, 'html_url');
         Assert::stringNotEmpty($response['html_url']);
         Assert::keyExists($response, 'labels');


26) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:109    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::nullOrBoolean($response['mergeable']);
         Assert::keyExists($response, 'mergeable_state');
         Assert::stringNotEmpty($response['mergeable_state']);
-        Assert::keyExists($response, 'html_url');
+        
         Assert::stringNotEmpty($response['html_url']);
         Assert::keyExists($response, 'labels');
         $labels = [];


27) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:110    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::keyExists($response, 'mergeable_state');
         Assert::stringNotEmpty($response['mergeable_state']);
         Assert::keyExists($response, 'html_url');
-        Assert::stringNotEmpty($response['html_url']);
+        
         Assert::keyExists($response, 'labels');
         $labels = [];
         foreach ($response['labels'] as $label) {


28) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:112    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::stringNotEmpty($response['mergeable_state']);
         Assert::keyExists($response, 'html_url');
         Assert::stringNotEmpty($response['html_url']);
-        Assert::keyExists($response, 'labels');
+        
         $labels = [];
         foreach ($response['labels'] as $label) {
             $labels[] = Label::fromResponse($label);


29) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:194    [M] LessThan

--- Original
+++ New
@@ @@
     public function updatedWithinTheLast60Seconds() : bool
     {
         $diff = (new DateTime('now', new DateTimeZone('UTC')))->getTimestamp() - $this->updatedAt->getTimestamp();
-        return $diff < 60;
+        return $diff <= 60;
     }
     public function toString() : string
     {


30) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Repository.php:31    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private function __construct(string $username, string $name)
     {
         Assert::stringNotEmpty($username);
-        Assert::stringNotEmpty($name);
+        
         $this->username = $username;
         $this->name = $name;
     }


31) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Repository.php:44    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public static function fromUrl(string $url) : self
     {
-        Assert::contains($url, '/');
+        
         Assert::notEndsWith($url, '/');
         [$name, $username] = array_reverse(u($url)->split('/'));
         return new self($username->toString(), $name->toString());


32) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Repository.php:45    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public static function fromUrl(string $url) : self
     {
         Assert::contains($url, '/');
-        Assert::notEndsWith($url, '/');
+        
         [$name, $username] = array_reverse(u($url)->split('/'));
         return new self($username->toString(), $name->toString());
     }


33) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Repository.php:58    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public static function fromString(string $repository) : self
     {
         Assert::contains($repository, '/');
-        Assert::notEndsWith($repository, '/');
+        
         [$username, $name] = u($repository)->split('/');
         return new self($username->toString(), $name->toString());
     }


Timed Out mutants:
==================

Skipped mutants:
================

Not Covered mutants:
====================

1) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Client/PullRequests.php:33    [M] PublicVisibility

--- Original
+++ New
@@ @@
         $this->github = $github;
         $this->githubPager = $githubPager;
     }
-    public function merge(Repository $repository, PullRequest $pullRequest, bool $squash, ?string $title = null) : void
+    protected function merge(Repository $repository, PullRequest $pullRequest, bool $squash, ?string $title = null) : void
     {
         $this->github->pullRequests()->merge($repository->username(), $repository->name(), $pullRequest->issue()->toInt(), $squash ? '' : $pullRequest->title(), $pullRequest->head()->sha()->toString(), $squash, $title);
     }


2) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Client/PullRequests.php:35    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     public function merge(Repository $repository, PullRequest $pullRequest, bool $squash, ?string $title = null) : void
     {
-        $this->github->pullRequests()->merge($repository->username(), $repository->name(), $pullRequest->issue()->toInt(), $squash ? '' : $pullRequest->title(), $pullRequest->head()->sha()->toString(), $squash, $title);
+        
     }
     /**
      * @return PullRequest[]


3) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Client/PullRequests.php:39    [M] Ternary

--- Original
+++ New
@@ @@
     }
     public function merge(Repository $repository, PullRequest $pullRequest, bool $squash, ?string $title = null) : void
     {
-        $this->github->pullRequests()->merge($repository->username(), $repository->name(), $pullRequest->issue()->toInt(), $squash ? '' : $pullRequest->title(), $pullRequest->head()->sha()->toString(), $squash, $title);
+        $this->github->pullRequests()->merge($repository->username(), $repository->name(), $pullRequest->issue()->toInt(), $squash ? $pullRequest->title() : '', $pullRequest->head()->sha()->toString(), $squash, $title);
     }
     /**
      * @return PullRequest[]


4) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Client/PullRequests.php:49    [M] PublicVisibility

--- Original
+++ New
@@ @@
     /**
      * @return PullRequest[]
      */
-    public function search(Query $query) : array
+    protected function search(Query $query) : array
     {
         return array_map(function (array $searchResponse) : PullRequest {
             $issue = Issue::fromInt($searchResponse['number']);


5) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Client/PullRequests.php:51    [M] UnwrapArrayMap

--- Original
+++ New
@@ @@
      */
     public function search(Query $query) : array
     {
-        return array_map(function (array $searchResponse) : PullRequest {
-            $issue = Issue::fromInt($searchResponse['number']);
-            $repository = Repository::fromUrl($searchResponse['repository_url']);
-            $response = $this->github->pullRequests()->show($repository->username(), $repository->name(), $issue->toInt());
-            Assert::isArray($response);
-            return PullRequest::fromResponse($response);
-        }, $this->githubPager->fetchAll($this->github->search(), 'issues', [$query->toString()]));
+        return $this->githubPager->fetchAll($this->github->search(), 'issues', [$query->toString()]);
     }
 }


6) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Client/PullRequests.php:61    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             $issue = Issue::fromInt($searchResponse['number']);
             $repository = Repository::fromUrl($searchResponse['repository_url']);
             $response = $this->github->pullRequests()->show($repository->username(), $repository->name(), $issue->toInt());
-            Assert::isArray($response);
+            
             return PullRequest::fromResponse($response);
         }, $this->githubPager->fetchAll($this->github->search(), 'issues', [$query->toString()]));
     }
 }


7) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Client/PullRequests.php:64    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
             $response = $this->github->pullRequests()->show($repository->username(), $repository->name(), $issue->toInt());
             Assert::isArray($response);
             return PullRequest::fromResponse($response);
-        }, $this->githubPager->fetchAll($this->github->search(), 'issues', [$query->toString()]));
+        }, $this->githubPager->fetchAll($this->github->search(), 'issues', []));
     }
 }


8) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:36    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     public function __construct(PullRequests $pullRequests)
     {
         $this->pullRequests = $pullRequests;
-        parent::__construct();
+        
     }
     protected function configure() : void
     {


9) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:41    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     }
     protected function configure() : void
     {
-        $this->setDefinition([new InputArgument('repository', InputArgument::REQUIRED, 'The repository to scan (format: organisation/repository)'), new InputOption('label', 'l', InputArgument::OPTIONAL, 'Label that indicates a pull request for merge.'), new InputOption('ignore-label', 'i', InputArgument::IS_ARRAY, 'Label that forbids a merge.'), new InputOption('squash', null, InputOption::VALUE_NONE, 'Squash commits.'), new InputOption('dry-run', null, InputOption::VALUE_NONE, 'Only shows which pull requests would have been merged.')])->setDescription('Merges open pull requests that build successfully');
+        
     }
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {


10) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:43    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     }
     protected function configure() : void
     {
-        $this->setDefinition([new InputArgument('repository', InputArgument::REQUIRED, 'The repository to scan (format: organisation/repository)'), new InputOption('label', 'l', InputArgument::OPTIONAL, 'Label that indicates a pull request for merge.'), new InputOption('ignore-label', 'i', InputArgument::IS_ARRAY, 'Label that forbids a merge.'), new InputOption('squash', null, InputOption::VALUE_NONE, 'Squash commits.'), new InputOption('dry-run', null, InputOption::VALUE_NONE, 'Only shows which pull requests would have been merged.')])->setDescription('Merges open pull requests that build successfully');
+        $this->setDefinition([new InputOption('label', 'l', InputArgument::OPTIONAL, 'Label that indicates a pull request for merge.'), new InputOption('ignore-label', 'i', InputArgument::IS_ARRAY, 'Label that forbids a merge.'), new InputOption('squash', null, InputOption::VALUE_NONE, 'Squash commits.'), new InputOption('dry-run', null, InputOption::VALUE_NONE, 'Only shows which pull requests would have been merged.')])->setDescription('Merges open pull requests that build successfully');
     }
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {


11) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:58    [M] ArrayItemRemoval

--- Original
+++ New
@@ @@
     }
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {
-        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
+        $config = Configuration::fromInput(['label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
         $io = new SymfonyStyle($input, $output);
         $io->title(sprintf('Merge pull requests with "%s" label (ignoring label: %s)', $config->label(), $config->ignoreLabel()));
         $repository = Repository::fromString($config->repository());


12) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:59    [M] ArrayItem

--- Original
+++ New
@@ @@
     }
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {
-        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
+        $config = Configuration::fromInput(['repository' > $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
         $io = new SymfonyStyle($input, $output);
         $io->title(sprintf('Merge pull requests with "%s" label (ignoring label: %s)', $config->label(), $config->ignoreLabel()));
         $repository = Repository::fromString($config->repository());


13) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:60    [M] ArrayItem

--- Original
+++ New
@@ @@
     }
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {
-        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
+        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' > $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
         $io = new SymfonyStyle($input, $output);
         $io->title(sprintf('Merge pull requests with "%s" label (ignoring label: %s)', $config->label(), $config->ignoreLabel()));
         $repository = Repository::fromString($config->repository());


14) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:61    [M] ArrayItem

--- Original
+++ New
@@ @@
     }
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {
-        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
+        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' > $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
         $io = new SymfonyStyle($input, $output);
         $io->title(sprintf('Merge pull requests with "%s" label (ignoring label: %s)', $config->label(), $config->ignoreLabel()));
         $repository = Repository::fromString($config->repository());


15) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:62    [M] ArrayItem

--- Original
+++ New
@@ @@
     }
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {
-        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
+        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' > $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
         $io = new SymfonyStyle($input, $output);
         $io->title(sprintf('Merge pull requests with "%s" label (ignoring label: %s)', $config->label(), $config->ignoreLabel()));
         $repository = Repository::fromString($config->repository());


16) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:63    [M] ArrayItem

--- Original
+++ New
@@ @@
     }
     protected function execute(InputInterface $input, OutputInterface $output) : int
     {
-        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
+        $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' > $input->getOption('dry-run')]);
         $io = new SymfonyStyle($input, $output);
         $io->title(sprintf('Merge pull requests with "%s" label (ignoring label: %s)', $config->label(), $config->ignoreLabel()));
         $repository = Repository::fromString($config->repository());


17) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:68    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         $config = Configuration::fromInput(['repository' => $input->getArgument('repository'), 'label' => $input->getOption('label'), 'ignore-label' => $input->getOption('ignore-label'), 'squash' => $input->getOption('squash'), 'dry-run' => $input->getOption('dry-run')]);
         $io = new SymfonyStyle($input, $output);
-        $io->title(sprintf('Merge pull requests with "%s" label (ignoring label: %s)', $config->label(), $config->ignoreLabel()));
+        
         $repository = Repository::fromString($config->repository());
         $pullRequests = $this->pullRequests->search(Query::labeled($repository, Label::fromString($config->label()), Label::fromString($config->ignoreLabel())));
         if ([] === $pullRequests) {


18) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:79    [M] Identical

--- Original
+++ New
@@ @@
         $io->title(sprintf('Merge pull requests with "%s" label (ignoring label: %s)', $config->label(), $config->ignoreLabel()));
         $repository = Repository::fromString($config->repository());
         $pullRequests = $this->pullRequests->search(Query::labeled($repository, Label::fromString($config->label()), Label::fromString($config->ignoreLabel())));
-        if ([] === $pullRequests) {
+        if ([] !== $pullRequests) {
             $io->success('No open pull requests found');
             return self::SUCCESS;
         }


19) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:80    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         $repository = Repository::fromString($config->repository());
         $pullRequests = $this->pullRequests->search(Query::labeled($repository, Label::fromString($config->label()), Label::fromString($config->ignoreLabel())));
         if ([] === $pullRequests) {
-            $io->success('No open pull requests found');
+            
             return self::SUCCESS;
         }
         foreach ($pullRequests as $pullRequest) {


20) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:85    [M] Foreach_

--- Original
+++ New
@@ @@
             $io->success('No open pull requests found');
             return self::SUCCESS;
         }
-        foreach ($pullRequests as $pullRequest) {
+        foreach (array() as $pullRequest) {
             if ($pullRequest->updatedWithinTheLast60Seconds()) {
                 if ($io->isVerbose()) {
                     $io->info('Skip very new PRs to ignore workflow delay');


21) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:88    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         foreach ($pullRequests as $pullRequest) {
             if ($pullRequest->updatedWithinTheLast60Seconds()) {
                 if ($io->isVerbose()) {
-                    $io->info('Skip very new PRs to ignore workflow delay');
+                    
                 }
                 continue;
             }


22) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:91    [M] Continue_

--- Original
+++ New
@@ @@
                 if ($io->isVerbose()) {
                     $io->info('Skip very new PRs to ignore workflow delay');
                 }
-                continue;
+                break;
             }
             if (true === $pullRequest->isMergeable() && $pullRequest->isCleanBuild()) {
                 if ($config->isDryRun()) {


23) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:94    [M] TrueValue

--- Original
+++ New
@@ @@
                 }
                 continue;
             }
-            if (true === $pullRequest->isMergeable() && $pullRequest->isCleanBuild()) {
+            if (false === $pullRequest->isMergeable() && $pullRequest->isCleanBuild()) {
                 if ($config->isDryRun()) {
                     $io->write('<fg=yellow>[READY]</> ');
                 } else {


24) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:94    [M] Identical

--- Original
+++ New
@@ @@
                 }
                 continue;
             }
-            if (true === $pullRequest->isMergeable() && $pullRequest->isCleanBuild()) {
+            if (true !== $pullRequest->isMergeable() && $pullRequest->isCleanBuild()) {
                 if ($config->isDryRun()) {
                     $io->write('<fg=yellow>[READY]</> ');
                 } else {


25) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:94    [M] LogicalAnd

--- Original
+++ New
@@ @@
                 }
                 continue;
             }
-            if (true === $pullRequest->isMergeable() && $pullRequest->isCleanBuild()) {
+            if (true === $pullRequest->isMergeable() || $pullRequest->isCleanBuild()) {
                 if ($config->isDryRun()) {
                     $io->write('<fg=yellow>[READY]</> ');
                 } else {


26) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:96    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             }
             if (true === $pullRequest->isMergeable() && $pullRequest->isCleanBuild()) {
                 if ($config->isDryRun()) {
-                    $io->write('<fg=yellow>[READY]</> ');
+                    
                 } else {
                     $this->pullRequests->merge($repository, $pullRequest, $config->isSquash());
                     $io->write('<fg=green>[MERGED]</> ');


27) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:98    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 if ($config->isDryRun()) {
                     $io->write('<fg=yellow>[READY]</> ');
                 } else {
-                    $this->pullRequests->merge($repository, $pullRequest, $config->isSquash());
+                    
                     $io->write('<fg=green>[MERGED]</> ');
                 }
             } else {


28) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:100    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                     $io->write('<fg=yellow>[READY]</> ');
                 } else {
                     $this->pullRequests->merge($repository, $pullRequest, $config->isSquash());
-                    $io->write('<fg=green>[MERGED]</> ');
+                    
                 }
             } else {
                 $io->write('<fg=red>[ERROR]</> ');


29) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:103    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                     $io->write('<fg=green>[MERGED]</> ');
                 }
             } else {
-                $io->write('<fg=red>[ERROR]</> ');
+                
             }
             $io->write(sprintf('<href=%s>%s</> - %s', $pullRequest->htmlUrl(), $pullRequest->issue()->toInt(), $pullRequest->title()));
             $io->newLine();


30) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:106    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
             } else {
                 $io->write('<fg=red>[ERROR]</> ');
             }
-            $io->write(sprintf('<href=%s>%s</> - %s', $pullRequest->htmlUrl(), $pullRequest->issue()->toInt(), $pullRequest->title()));
+            
             $io->newLine();
         }
         return self::SUCCESS;
     }
 }


31) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Command/MergeCommand.php:108    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
                 $io->write('<fg=red>[ERROR]</> ');
             }
             $io->write(sprintf('<href=%s>%s</> - %s', $pullRequest->htmlUrl(), $pullRequest->issue()->toInt(), $pullRequest->title()));
-            $io->newLine();
+            
         }
         return self::SUCCESS;
     }
 }


32) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:37    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     private function __construct(array $options)
     {
         Assert::keyExists($options, 'repository');
-        Assert::stringNotEmpty($options['repository']);
+        
         Assert::nullOrString($options['label']);
         Assert::nullOrString($options['ignore-label']);
         Assert::nullOrBoolean($options['squash']);


33) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:39    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
     {
         Assert::keyExists($options, 'repository');
         Assert::stringNotEmpty($options['repository']);
-        Assert::nullOrString($options['label']);
+        
         Assert::nullOrString($options['ignore-label']);
         Assert::nullOrBoolean($options['squash']);
         Assert::nullOrBoolean($options['dry-run']);


34) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:41    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::keyExists($options, 'repository');
         Assert::stringNotEmpty($options['repository']);
         Assert::nullOrString($options['label']);
-        Assert::nullOrString($options['ignore-label']);
+        
         Assert::nullOrBoolean($options['squash']);
         Assert::nullOrBoolean($options['dry-run']);
         $this->repository = $options['repository'];


35) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:43    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::stringNotEmpty($options['repository']);
         Assert::nullOrString($options['label']);
         Assert::nullOrString($options['ignore-label']);
-        Assert::nullOrBoolean($options['squash']);
+        
         Assert::nullOrBoolean($options['dry-run']);
         $this->repository = $options['repository'];
         $this->label = $options['label'] ?? $this->label;


36) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:45    [M] MethodCallRemoval

--- Original
+++ New
@@ @@
         Assert::nullOrString($options['label']);
         Assert::nullOrString($options['ignore-label']);
         Assert::nullOrBoolean($options['squash']);
-        Assert::nullOrBoolean($options['dry-run']);
+        
         $this->repository = $options['repository'];
         $this->label = $options['label'] ?? $this->label;
         $this->ignoreLabel = $options['ignore-label'] ?? $this->ignoreLabel;


37) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:48    [M] Coalesce

--- Original
+++ New
@@ @@
         Assert::nullOrBoolean($options['squash']);
         Assert::nullOrBoolean($options['dry-run']);
         $this->repository = $options['repository'];
-        $this->label = $options['label'] ?? $this->label;
+        $this->label = $this->label ?? $options['label'];
         $this->ignoreLabel = $options['ignore-label'] ?? $this->ignoreLabel;
         $this->squash = $options['squash'] ?? $this->squash;
         $this->dryRun = $options['dry-run'] ?? $this->dryRun;


38) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:49    [M] Coalesce

--- Original
+++ New
@@ @@
         Assert::nullOrBoolean($options['dry-run']);
         $this->repository = $options['repository'];
         $this->label = $options['label'] ?? $this->label;
-        $this->ignoreLabel = $options['ignore-label'] ?? $this->ignoreLabel;
+        $this->ignoreLabel = $this->ignoreLabel ?? $options['ignore-label'];
         $this->squash = $options['squash'] ?? $this->squash;
         $this->dryRun = $options['dry-run'] ?? $this->dryRun;
     }


39) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:50    [M] Coalesce

--- Original
+++ New
@@ @@
         $this->repository = $options['repository'];
         $this->label = $options['label'] ?? $this->label;
         $this->ignoreLabel = $options['ignore-label'] ?? $this->ignoreLabel;
-        $this->squash = $options['squash'] ?? $this->squash;
+        $this->squash = $this->squash ?? $options['squash'];
         $this->dryRun = $options['dry-run'] ?? $this->dryRun;
     }
     /**


40) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:51    [M] Coalesce

--- Original
+++ New
@@ @@
         $this->label = $options['label'] ?? $this->label;
         $this->ignoreLabel = $options['ignore-label'] ?? $this->ignoreLabel;
         $this->squash = $options['squash'] ?? $this->squash;
-        $this->dryRun = $options['dry-run'] ?? $this->dryRun;
+        $this->dryRun = $this->dryRun ?? $options['dry-run'];
     }
     /**
      * @param array<string, mixed> $options


41) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:62    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return new self($options);
     }
-    public function repository() : string
+    protected function repository() : string
     {
         return $this->repository;
     }


42) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:67    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->repository;
     }
-    public function label() : string
+    protected function label() : string
     {
         return $this->label;
     }


43) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:72    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->label;
     }
-    public function ignoreLabel() : string
+    protected function ignoreLabel() : string
     {
         return $this->ignoreLabel;
     }


44) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:77    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->ignoreLabel;
     }
-    public function isSquash() : bool
+    protected function isSquash() : bool
     {
         return $this->squash;
     }


45) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Config/Configuration.php:82    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->squash;
     }
-    public function isDryRun() : bool
+    protected function isDryRun() : bool
     {
         return $this->dryRun;
     }
 }


46) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/Head.php:68    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->sha;
     }
-    public function toString() : string
+    protected function toString() : string
     {
         return $this->ref;
     }
 }


47) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:161    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->mergeable;
     }
-    public function mergeableState() : string
+    protected function mergeableState() : string
     {
         return $this->mergeableState;
     }


48) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:166    [M] PublicVisibility

--- Original
+++ New
@@ @@
     {
         return $this->mergeableState;
     }
-    public function isCleanBuild() : bool
+    protected function isCleanBuild() : bool
     {
         return 'clean' === $this->mergeableState;
     }


49) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:168    [M] Identical

--- Original
+++ New
@@ @@
     }
     public function isCleanBuild() : bool
     {
-        return 'clean' === $this->mergeableState;
+        return 'clean' !== $this->mergeableState;
     }
     public function htmlUrl() : string
     {


50) /Users/gripp/Development/Web/lib/nucleos/auto-merge-action/src/Domain/PullRequest.php:197    [M] PublicVisibility

--- Original
+++ New
@@ @@
         $diff = (new DateTime('now', new DateTimeZone('UTC')))->getTimestamp() - $this->updatedAt->getTimestamp();
         return $diff < 60;
     }
-    public function toString() : string
+    protected function toString() : string
     {
         return sprintf('%s: %s', $this->issue->toInt(), $this->title);
     }
 }
